package interfacesGraficas;

import banco_dados.Conector;
import java.util.List;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import projetoacademia.Cliente;

/**
 *
 * @author levy
 */
public class Cadastro extends javax.swing.JFrame {
    //A janela de controle
    private GUI_Principal controle;
    
    /**
     * Creates new form Cadastro
     */
    public Cadastro() {
        initComponents();
    }
    
    public Cadastro(GUI_Principal controle) {
        this();
        this.controle = controle;
        this.inicializarCampos();
        tf_tag.setEditable(false);
        this.setLocationRelativeTo(null); //INICIAR O JFRAME NO MEIO DA TELA
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jPanel_ctr = new javax.swing.JPanel();
        lb_imgStatus = new javax.swing.JLabel();
        lb_tag = new javax.swing.JLabel();
        btn_cadastrar = new javax.swing.JButton();
        lb_nome = new javax.swing.JLabel();
        lb_cpf = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jSeparator1 = new javax.swing.JSeparator();
        lb_sobrenome = new javax.swing.JLabel();
        lb_rg = new javax.swing.JLabel();
        lb_descricao = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lb_servicos = new javax.swing.JLabel();
        lb_logradouro = new javax.swing.JLabel();
        tf_logradouro = new javax.swing.JTextField();
        lb_cep = new javax.swing.JLabel();
        lb_numero = new javax.swing.JLabel();
        lb_apto = new javax.swing.JLabel();
        lb_complemento = new javax.swing.JLabel();
        tf_cep = new javax.swing.JTextField();
        tf_numero = new javax.swing.JTextField();
        tf_apto = new javax.swing.JTextField();
        tf_complemeto = new javax.swing.JTextField();
        lb_tel = new javax.swing.JLabel();
        tf_telefone = new javax.swing.JTextField();
        lb_cel = new javax.swing.JLabel();
        tf_celular = new javax.swing.JTextField();
        tf_descricao = new javax.swing.JTextField();
        tf_valor = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jcbx_form_pag = new javax.swing.JComboBox<>();
        tf_nome = new javax.swing.JTextField();
        tf_sobrenome = new javax.swing.JTextField();
        tf_rg = new javax.swing.JTextField();
        tf_cpf = new javax.swing.JTextField();
        tf_tag = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jl_servicos = new javax.swing.JList<>();
        lb_email = new javax.swing.JLabel();
        tf_email = new javax.swing.JTextField();
        btn_cancelar = new javax.swing.JButton();
        btn_valor = new javax.swing.JButton();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenu1.setText("jMenu1");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel_ctr.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Painel de Cadastro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        lb_tag.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_tag.setText("Tag:");

        btn_cadastrar.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        btn_cadastrar.setText("Cadastrar");
        btn_cadastrar.setPreferredSize(new java.awt.Dimension(55, 23));
        btn_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastrarActionPerformed(evt);
            }
        });

        lb_nome.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_nome.setText("Nome:*");

        lb_cpf.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_cpf.setText("CPF:*");

        lb_sobrenome.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_sobrenome.setText("Sobrenome:*");

        lb_rg.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_rg.setText("RG:*");

        lb_descricao.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_descricao.setText("Descrição:");

        lb_servicos.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_servicos.setText("Serviços:*");

        lb_logradouro.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_logradouro.setText("Logradouro:*");

        tf_logradouro.setName("Logradouro"); // NOI18N

        lb_cep.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_cep.setText("CEP:");

        lb_numero.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_numero.setText("Numero:*");

        lb_apto.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_apto.setText("Apto.:");

        lb_complemento.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_complemento.setText("Complemento:");

        tf_cep.setName("CEP"); // NOI18N

        tf_numero.setName("Numero"); // NOI18N

        tf_apto.setName("Apto"); // NOI18N

        tf_complemeto.setName("Complemento"); // NOI18N

        lb_tel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_tel.setText("Tel:*");

        tf_telefone.setName("Tel"); // NOI18N

        lb_cel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_cel.setText("Cel:");

        tf_celular.setName("Cel"); // NOI18N

        tf_descricao.setName("Descrição"); // NOI18N

        tf_valor.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        tf_valor.setName("Total"); // NOI18N

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel22.setText("Forma de Pagamento:*");

        jcbx_form_pag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbx_form_pag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbx_form_pagActionPerformed(evt);
            }
        });

        tf_nome.setName("Nome"); // NOI18N

        tf_sobrenome.setName("Sobrenome"); // NOI18N

        tf_rg.setName("RG"); // NOI18N

        tf_cpf.setName("CPF"); // NOI18N

        tf_tag.setName("Tag"); // NOI18N

        jl_servicos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jl_servicos.setName("Serviços"); // NOI18N
        jScrollPane1.setViewportView(jl_servicos);
        jl_servicos.getAccessibleContext().setAccessibleName("Serviços");

        lb_email.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lb_email.setText("Email:");

        tf_email.setName("Email"); // NOI18N

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_valor.setText("Valor");
        btn_valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_valorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ctrLayout = new javax.swing.GroupLayout(jPanel_ctr);
        jPanel_ctr.setLayout(jPanel_ctrLayout);
        jPanel_ctrLayout.setHorizontalGroup(
            jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ctrLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                    .addGap(49, 49, 49)
                                    .addComponent(lb_nome)
                                    .addGap(18, 18, 18)
                                    .addComponent(tf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ctrLayout.createSequentialGroup()
                                    .addComponent(lb_sobrenome)
                                    .addGap(18, 18, 18)
                                    .addComponent(tf_sobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lb_cpf)
                                    .addComponent(lb_rg)
                                    .addComponent(lb_email))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_rg)
                                    .addComponent(tf_cpf, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(tf_email, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                .addComponent(lb_descricao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                .addComponent(lb_tag)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_tag, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ctrLayout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addGap(12, 12, 12))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lb_cep)
                                    .addComponent(lb_logradouro)
                                    .addComponent(lb_numero))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_logradouro, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                    .addComponent(tf_cep)
                                    .addComponent(tf_numero)))
                            .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                    .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lb_apto)
                                        .addComponent(lb_complemento))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tf_apto, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                        .addComponent(tf_complemeto, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)))
                                .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                    .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                            .addGap(97, 97, 97)
                                            .addComponent(lb_cel))
                                        .addComponent(lb_tel, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tf_telefone)
                                        .addComponent(tf_celular, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(lb_servicos)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ctrLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                        .addComponent(btn_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45))))
                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                .addGap(380, 380, 380)
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(filler1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_imgStatus, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                        .addGap(320, 320, 320)
                                        .addComponent(btn_cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbx_form_pag, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel_ctrLayout.setVerticalGroup(
            jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ctrLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_tag)
                            .addComponent(tf_tag, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_descricao)
                            .addComponent(tf_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_nome)
                            .addComponent(tf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_sobrenome)
                            .addComponent(tf_sobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_rg)
                            .addComponent(tf_rg, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_cpf))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_email))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_logradouro)
                            .addComponent(tf_logradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lb_servicos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_ctrLayout.createSequentialGroup()
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_cep)
                            .addComponent(tf_cep, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_numero)
                            .addComponent(tf_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_apto)
                            .addComponent(tf_apto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_complemento)
                            .addComponent(tf_complemeto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_tel)
                    .addComponent(tf_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_valor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_cel)
                    .addComponent(tf_celular, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jcbx_form_pag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel_ctrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_imgStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        lb_nome.getAccessibleContext().setAccessibleName("Nome");
        tf_logradouro.getAccessibleContext().setAccessibleName("Logradouro");
        tf_cep.getAccessibleContext().setAccessibleName("CEP");
        tf_numero.getAccessibleContext().setAccessibleName("Numero");
        tf_apto.getAccessibleContext().setAccessibleName("Apto");
        tf_complemeto.getAccessibleContext().setAccessibleName("Complemento");
        tf_telefone.getAccessibleContext().setAccessibleName("Tel");
        tf_celular.getAccessibleContext().setAccessibleName("Cel");
        tf_descricao.getAccessibleContext().setAccessibleName("Descrição");
        tf_valor.getAccessibleContext().setAccessibleName("Total");
        jcbx_form_pag.getAccessibleContext().setAccessibleName("Forma de Pagamento");
        tf_nome.getAccessibleContext().setAccessibleName("Nome");
        tf_nome.getAccessibleContext().setAccessibleDescription("");
        tf_sobrenome.getAccessibleContext().setAccessibleName("Sobtrenome");
        tf_rg.getAccessibleContext().setAccessibleName("RG");
        tf_cpf.getAccessibleContext().setAccessibleName("CPF");
        tf_tag.getAccessibleContext().setAccessibleName("Tag");
        tf_email.getAccessibleContext().setAccessibleName("Email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel_ctr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ctr, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastrarActionPerformed
        Cliente cliente;
        
        boolean bloquear = this.validaCampos();
        
        //Se algum campo não passou na validação
        if(!bloquear){
            //Transformando todos os textFields em um objeto cliente
            cliente = this.textFieldToCliente();

            try {
                //Inserindo cliente
                Conector.inserirCliente(cliente);
                
                //Mensagem de sucesso ao enviar dados ao BD
                JOptionPane.showMessageDialog(this, "Dados enviados com sucesso!");
            } catch (Exception ex) {
                //Mensagem de erro
                JOptionPane.showMessageDialog(this, "Erro ao enviar dados!");
                //Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Chamando a janela de controle
            controle.inicializarCampos();
            controle.setEnabled(true);
            controle.setVisible(true);
            this.dispose();
        }
        

    }//GEN-LAST:event_btn_cadastrarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        //Chama a janela de controle
        controle.setEnabled(true);
        controle.setVisible(true);
        this.dispose();                
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void jcbx_form_pagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbx_form_pagActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbx_form_pagActionPerformed

    private void btn_valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_valorActionPerformed
        //Obtendo os serviços selecionados
        List<String> servicos = jl_servicos.getSelectedValuesList();
        int tam = servicos.size();
        double valor;
        ArrayList res;
        String query;
        
        //Se existirem serviços selecionados
        if(tam > 0){
            //Preparando o código para obter a soma dos valores de cada serviço selecionado
            query = "SELECT SUM(SERV_VALOR) FROM TBL_SERVICOS WHERE SERV_DESCRICAO = ";
            for(int i=0; i<tam;){
                query += "'"+servicos.get(i)+"'";
                i++;
                if(i < tam){
                    query += " OR SERV_DESCRICAO = ";
                }
            }
            query += ";";
            
            //Executando a query e setando o valor obtido no textBox
            try {
                res = Conector.selecionar(query, "SUM");
                valor = Double.parseDouble((String) res.get(0));                
                tf_valor.setText("R$ "+valor);
            } catch (Exception ex) {
                Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showConfirmDialog(this, "Erro de conexão com o banco de dados.");
            }
        }
    }//GEN-LAST:event_btn_valorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Cadastro().setVisible(true);
            }
        });
    }
    
    /**
     * Inicializa todos os campos (textBox, comboBox...) da janela.
     */
    private void inicializarCampos(){
        ArrayList<String> results;
        String query;
        String[] data;
        
        jcbx_form_pag.removeAllItems();
        
        try {            
            //Obtendo todos os serviços do BD
            query = "SELECT SERV_DESCRICAO FROM TBL_SERVICOS;";
            results = Conector.selecionar(query, "SERV_DESCRICAO");
            data = results.toArray(new String[results.size()]);
            jl_servicos.setListData(data);
            
            //Obtendo todas as formas de pagamento
            query = "SELECT FORM_DESCRICAO FROM TBL_FORMA_PAG;";
            results = Conector.selecionar(query, "FORM_DESCRICAO");
            data = results.toArray(new String[results.size()]);
            
            //Inserindo as formas de pagamento
            for(String el : data){
                jcbx_form_pag.addItem(el);
            }            
        } catch (Exception ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Transforma todos os valores dos campos em um objeto do tipo Cliente.
     * @return Um objeto do tipo Cliente.
     */
    private Cliente textFieldToCliente(){
        Cliente cliente = new Cliente();
        List<String> servicos;
        
        if(tf_email.getText().equals("")){
            cliente.setEmail(null);
        }else{
            cliente.setEmail("'"+tf_email.getText()+"'");
        }
        
        if(tf_descricao.getText().equals("")){
            cliente.setDescrTag(null);
        }else{
            cliente.setDescrTag("'"+tf_descricao.getText()+"'");
        }
        
        if(tf_cep.getText().equals("")){
            cliente.setCep(null);
        }else{
            cliente.setCep("'"+tf_cep.getText()+"'");
        }
        
        if(tf_celular.getText().equals("")){
            cliente.setCel(null);
        }else{
            cliente.setCel("'"+tf_celular.getText()+"'");
        }
        
        if(tf_apto.getText().equals("")){
            cliente.setApto(null);
        }else{
            cliente.setApto(tf_apto.getText());
        }
        
        if(tf_complemeto.getText().equals("")){
            cliente.setComplemento(null);
        }else{
            cliente.setComplemento("'"+tf_complemeto.getText()+"'");
        }
        
        cliente.setTag(tf_tag.getText());
        cliente.setNome(tf_nome.getText());
        cliente.setSobrenome(tf_sobrenome.getText());
        cliente.setRg(tf_rg.getText());
        cliente.setCpf(tf_cpf.getText());
        cliente.setLogradouro(tf_logradouro.getText());
        cliente.setNumero(tf_numero.getText());
        cliente.setTel(tf_telefone.getText());
        cliente.setFormaPag((String)jcbx_form_pag.getSelectedItem());
        cliente.setAtivo(true);
        
        if(jCheckBoxMenuItem1.getSelectedObjects().length > 0){
            servicos = jl_servicos.getSelectedValuesList();
            cliente.setServicos(servicos);
        }
        
        return cliente;
    }
    
    /**
     * Valida todos os campos.
     * @return <code>true</code> Se todos os campos estão válidos.
     *         <code>false</code> Se existe algum campo que não está válido.
     */
    private boolean validaCampos(){
        boolean result;
        List<String> servicos;
        
        //Validando em relação a campos vazios
        result = this.campoVazio(tf_nome) || this.campoVazio(tf_sobrenome) ||
                this.campoVazio(tf_logradouro) || this.campoVazio(tf_rg) ||
                this.campoVazio(tf_cpf) || this.campoVazio(tf_numero) ||
                this.campoVazio(tf_telefone) || this.campoVazio(tf_tag) ||
                
                //Validando em relação a exceção de quantidade de caracteres
                this.excedeTamanho(tf_nome, 20) || this.excedeTamanho(tf_sobrenome, 20) ||
                this.excedeTamanho(tf_rg, 15) || this.excedeTamanho(tf_cpf, 15) ||
                this.excedeTamanho(tf_email, 50) || this.excedeTamanho(tf_tag, 20) ||
                this.excedeTamanho(tf_descricao, 20) || this.excedeTamanho(tf_logradouro, 20) ||
                this.excedeTamanho(tf_cep, 15) || this.excedeTamanho(tf_numero, 10) ||
                this.excedeTamanho(tf_apto, 5) || this.excedeTamanho(tf_complemeto, 30) ||
                this.excedeTamanho(tf_telefone, 25) || this.excedeTamanho(tf_celular, 25) ||
                
                //Validando em relação ao tipo de dado (Numérico, Alfabético...)
                this.validaCampoTipo(tf_nome, 'A') || this.validaCampoTipo(tf_sobrenome, 'A') ||
                this.validaCampoTipo(tf_descricao, 'A') || this.validaCampoTipo(tf_rg, 'N') ||
                this.validaCampoTipo(tf_cpf, 'N') || this.validaCampoTipo(tf_cep, 'N') ||
                this.validaCampoTipo(tf_numero, 'N') || this.validaCampoTipo(tf_apto, 'N') ||
                this.validaCampoTipo(tf_telefone, 'T') || this.validaCampoTipo(tf_celular, 'T');
        
        if(!result){
            servicos = jl_servicos.getSelectedValuesList();
            //Verificando se algum serviço foi selecionado
            if(servicos.size() < 1){
                JOptionPane.showMessageDialog(this, "Escolha um ou mais serviços.");
                result = true;
            }            
        }
        
        return result;
    }
    
    /**
     * Valida um JTextField em relação ao tipo de dado (Alfabético, Numérico...),
     * se não for válido, imprime uma mensagem de alerta e coloca o campo como foco.
     * @param tf Um JTextField a ser validado
     * @param tipo O tipo de dado que ele precisa ser:
     *        <code>'A'</code> - Alfabético;<br>
     *        <code>'N'</code> - Numérico;<br>
     *        <code>'T'</code> - Numérico + '(' e ')'.
     * @return <code>true</code> Se o campo é válido <br>
     *         <code>false</code> Se o campo não é válido.
     */
    /*
        65 - A      97 - a      48 - 0      40 - (
        90 - Z      122 - z     57 - 9      41 - )        
    */
    private boolean validaCampoTipo(JTextField tf, char tipo){        
        String text = tf.getText();
        int tam = text.length();
        int valorAscii;
        boolean result = false;
        
        switch(tipo){
            case 'N':{
                for(int i=0; i < tam; i++){
                    valorAscii = (int) text.charAt(i);
                    if(valorAscii < 48 || valorAscii > 57){
                        JOptionPane.showMessageDialog(this, "O campo "+tf.getName()+" só permite números.");
                        tf.requestFocus();
                        result = true;
                        break;
                    }
                }
                break;
            }
            case 'A':{
                for(int i=0; i < tam; i++){
                    valorAscii = (int) text.charAt(i);
                    if(valorAscii < 65 || valorAscii > 90 && valorAscii < 97 || valorAscii > 122){
                        JOptionPane.showMessageDialog(this, "O campo "+tf.getName()+" só permite letras do alfabeto.");
                        tf.requestFocus();
                        result = true;
                        break;
                    }
                }
                break;
            }
            case 'T':{
                for(int i=0; i < tam; i++){
                    valorAscii = (int) text.charAt(i);
                    if((valorAscii < 48 || valorAscii > 57) && (valorAscii != 40 && valorAscii != 41)){
                        JOptionPane.showMessageDialog(this, "O campo "+tf.getName()+" só permite números e parênteses.");
                        tf.requestFocus();
                        result = true;
                        break;
                    }
                }
                break;
            }
        }
        
        return result;
    }
    
    /**
     * Verifica se um JTextField está vazio, se sim, imprime uma mensagem
     * de alerta e coloca o campo como foco.
     * @param tf Um JTextField
     * @return <code>true</code> Se o campo está vazio.<br>
     *         <code>false</code> Se o campo não está vazio.
     */
    private boolean campoVazio(JTextField tf){
        String text = tf.getText();
        boolean result = false;
        
        if(text.equals("")){
            JOptionPane.showMessageDialog(this, "O campo "+tf.getName()+" é obrigatório.");
            tf.requestFocus();
            result = true;
        }
        
        return result;
    }
    
    /**
     * Verifica se o JTextField excede uma certa quantidade de caracteres, 
     * se sim, imprime uma mensagem de alerta e coloca o campo como foco.
     * @param tf Um JTextField
     * @param maxTam A quantidade máxima de caracteres
     * @return <code>true</code> Se o campo excedeu a quantidade.
     *         <code>false</code> Se o campo não excedeu.
     */
    private boolean excedeTamanho(JTextField tf, int maxTam){
        String text = tf.getText();
        boolean result = false;
        if(text.length() > maxTam){
            JOptionPane.showMessageDialog(this, "O campo "+tf.getName()+" tem no máximo "+maxTam+" caracteres.");
            tf.requestFocus();
            result = true;
        }
        
        return result;
    }
    
    public void setTfTag(String str){
        tf_tag.setText(str);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cadastrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_valor;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel_ctr;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> jcbx_form_pag;
    private javax.swing.JList<String> jl_servicos;
    private javax.swing.JLabel lb_apto;
    private javax.swing.JLabel lb_cel;
    private javax.swing.JLabel lb_cep;
    private javax.swing.JLabel lb_complemento;
    private javax.swing.JLabel lb_cpf;
    private javax.swing.JLabel lb_descricao;
    private javax.swing.JLabel lb_email;
    private javax.swing.JLabel lb_imgStatus;
    private javax.swing.JLabel lb_logradouro;
    private javax.swing.JLabel lb_nome;
    private javax.swing.JLabel lb_numero;
    private javax.swing.JLabel lb_rg;
    private javax.swing.JLabel lb_servicos;
    private javax.swing.JLabel lb_sobrenome;
    private javax.swing.JLabel lb_tag;
    private javax.swing.JLabel lb_tel;
    private javax.swing.JTextField tf_apto;
    private javax.swing.JTextField tf_celular;
    private javax.swing.JTextField tf_cep;
    private javax.swing.JTextField tf_complemeto;
    private javax.swing.JTextField tf_cpf;
    private javax.swing.JTextField tf_descricao;
    private javax.swing.JTextField tf_email;
    private javax.swing.JTextField tf_logradouro;
    private javax.swing.JTextField tf_nome;
    private javax.swing.JTextField tf_numero;
    private javax.swing.JTextField tf_rg;
    private javax.swing.JTextField tf_sobrenome;
    private javax.swing.JTextField tf_tag;
    private javax.swing.JTextField tf_telefone;
    private javax.swing.JTextField tf_valor;
    // End of variables declaration//GEN-END:variables
}
